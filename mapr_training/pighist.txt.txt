1   fruit = load 'data/exercise2.txt' using PigStorage(',') as (id:int, name:chararray, fruit:chararray);
2   apple = filter fruit by fruit MATCHES 'apple';
3   rawfruit = load 'data/exercise2.txt' using PigStorage(',');
4   fruitschema = foreach rawfruit generate $1 as (name:chararray), $2 as (fruit:chararray);
5   applefruits = filter fruitschema by fruit MATCHES 'apple';
6   store applefruits into 'output' using PigStorage(' ');
7   store applefruits into 'output' using PigStorage(',');
8   fruitschema = foreach rawfruit generate $1 as (name0:chararray), $2 as (fruit0:chararray);
9   applefruits = filter fruitschema by fruit0 MATCHES 'apple';
10   fruitschema = foreach rawfruit generate $1 as (name0:chararray), $2 as (fruit0:chararray);
11   fruitschema = foreach rawfruit generate $1 as (name0: chararray), $2 as (fruit0: chararray);
12   applefruits = filter fruitschema by fruit0 MATCHES 'apple';
13   fruitschema = foreach rawfruit generate $1 as (name0: CharArray), $2 as (fruit0: CharArray);
14   applefruits = filter fruitschema by fruit0 MATCHES 'apple';
15   fruitschema = foreach rawfruit generate (chararray) $1 as (name0: CharArray), (chararray) $2 as (fruit0: CharArray);
16   applefruits = filter fruitschema by fruit0 MATCHES 'apple';
17   store applefruits into 'output' using PigStorage(' ');
18   fruitraw = load 'data/exercise2.txt' using PigStorage(',') as (id:int, name:chararray, fruit:chararray);
19   fruitgroup = group fruitraw by fruit;
20   fruitgroup = group fruitraw by fruit;
21   fruitcount = foreach fruitgroup generate group, COUNT(fruitraw);
22   fruit = load 'data/exercise2.txt' using PigStorage(',') as (id:int, name:chararray, fruit:chararray);
23   marks = load 'data/marks.txt' using PigStorage(',') as (name:chararray, grade:int, account:long);
24   fruitmarks = join fruit by name, marks by name using 'replicated';
25   fruitmarksouter = join fruit by name FULL OUTER, marks by name;
26   fruitcogroup = cogroup fruit by fruit;
27   fruitmarkscogroup = cogroup fruit by name, marks by name;
28   applemango = filter fruit by fruit MATCHES 'apple' or fruit MATCHES 'mango';
29   fruitorder = order fruit by fruit asc, id asc parallel 4;
30   store fruitorder into 'fruitorderoutput' using PigStorage(',');
31   SPLIT  marks INTO passmarks IF (grade > 69) ,  failmarks IF (grade < 70);
grunt>
